apply plugin: 'com.android.application'
apply from: "$project.rootDir/tools/findbugs.gradle"
apply from: "$project.rootDir/tools/checkstyle.gradle"
apply from: "$project.rootDir/tools/pmd.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion Versions.compile_sdk

    dataBinding {
        enabled true
    }
    defaultConfig {
        applicationId "com.android.ashwiask.tvmaze"
        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk
        versionCode Versions.app_version_code
        versionName Versions.app_version_name
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "default"
    productFlavors {
        prod {
            dimension "default"
            applicationId = "com.android.ashwiask.tvmaze"
        }
        dev {
            dimension "default"
            applicationId = "com.android.ashwiask.tvmaze.dev"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '.readme'
    }
    // To enable experimental functionality like @Parcelize
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Support
    implementation Deps.support_lib_design
    implementation Deps.support_lib_appcompat
    implementation Deps.support_lib_support_annotations
    implementation Deps.support_lib_recyclerview
    implementation Deps.support_lib_cardview
    implementation Deps.constraint_layout

    implementation Deps.multidex

    implementation Deps.rxjava_android
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation Deps.rxjava_main

    implementation Deps.okhttp_main
    implementation Deps.okhttp_logging_interceptor

    // Glide
    implementation Deps.glide_runtime
    implementation Deps.glide_okhttp_integration
    kapt Deps.glide_compiler

    // Retrofit
    implementation Deps.retrofit_main
    implementation Deps.retrofit_moshi
    implementation Deps.retrofit_rxjava
    implementation Deps.okhttp_logging_interceptor

    // Dagger2
    implementation Deps.dagger_main
    kapt Deps.dagger_compiler
    implementation Deps.dagger_android
    kapt Deps.dagger_android_processor
    implementation Deps.dagger_android_support

    // Viewmodel
    implementation Deps.lifecycle_extensions
    kapt Deps.lifecycle_compiler

    // Paging
    implementation Deps.paging_runtime
    testImplementation Deps.paging_common

    // Room
    implementation Deps.room_runtime
    kapt Deps.room_compiler
    implementation Deps.room_rxjava2
    testImplementation Deps.room_testing

    // Logger
    implementation Deps.timber

    // Test
    testImplementation Deps.junit
    androidTestImplementation Deps.findbugs_jsr
    testImplementation Deps.mockito_core
    androidTestImplementation Deps.mockito_android
    androidTestImplementation Deps.mockito_kotlin
    testImplementation Deps.robolectric
    testImplementation Deps.arch_core_testing
    // Espresso
    androidTestImplementation(Deps.espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation Deps.espresso_contrib

    implementation Deps.moshi_kotlin
    kapt Deps.moshi_codegen

    kapt Deps.databinding
}


